generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Coffee {
  id          String      @id @default(uuid())
  name        String
  description String
  price       Decimal     @db.Decimal(10, 2)
  imageUrl    String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  cartItems   CartItem[]
  tags        CoffeeTag[]
}

model Tag {
  id        String      @id @default(uuid())
  name      String      @unique
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  coffees   CoffeeTag[]
}

model CoffeeTag {
  coffeeId String
  tagId    String
  coffee   Coffee @relation(fields: [coffeeId], references: [id], onDelete: Cascade)
  tag      Tag    @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([coffeeId, tagId])
}

model Cart {
  id                String     @id @default(uuid())
  userId            String?
  status            String
  statusPayment     String
  dataTimeCompleted DateTime?
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  items             CartItem[]
  orders            Order[]    @relation("CartOrders")
}

model CartItem {
  id        String   @id @default(uuid())
  quantity  Int
  unitPrice Decimal  @db.Decimal(10, 2)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  coffeeId  String
  cartId    String
  cart      Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  coffee    Coffee   @relation(fields: [coffeeId], references: [id], onDelete: Cascade)
}

model Order {
  id              String   @id @default(uuid())
  cartId          String
  totalItems      Int
  shippingFee     Float
  totalAmount     Float
  deliveryAddress Json
  paymentMethod   String
  status          String   @default("pending")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  cart            Cart     @relation("CartOrders", fields: [cartId], references: [id])
}
